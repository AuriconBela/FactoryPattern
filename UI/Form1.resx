<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAkFAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAE9ZJREFUeJztnQuQJVdZx3d8oSAKPkDEJyqYkAIFNFR8oEY0pZbycMpk
        bs9MbvfNmAeTnXt6JrtJWY6VMgQiWBokSEXKFykLSlHK8lEhIGgIhkBUJAlIVNigPAJWAjGYB1nP1/dO
        MruZvafv7b73f8+c36/qq9nsZLu/853v+/r06XO+c+AAAAAAAAAAAAA04qw1972dwvWyvLw6K9xf+583
        enlPJy+v9X//uqV885yVtc3vmuTaS92Np9m1/bVe3ynKd/qfH+nk7lP++p/0P2/393tXVpRvWM7Lc5eL
        gye13TYA2IOl8w4/0QfhIR+AH/IBeLSO+AC+OeuVa4uL218x6tp5vvX4TndzI8vdP9W99iPibvE/L14s
        +l83K1sAJMPa2tqX+yC7yAfnXeMH51Byd8dyUb7k+Guvr68/xj/VL/GJ5bMTX/vhZOPu8dd6+eL553+1
        wk4A+w4bjvvgfW/T4NyVCK5ZXOx/lV07O8ed5of3H27t2o+MOj6+3N38SbXtAKIm65an+mD6dPsB6m6w
        Vwkf/Pe3fe2H75G7L/pks+2bsaC2I0B0LOfu+xsN+edF8vLq7e3tL1HbEyAabDLNP/n/Ux68rY0GyqvU
        NgWIBh/8f6oO2vaTgFtX2xVg7sl65U+M8WT9oH26W+ltPDPLysetrW0/ttMtT/a/u9B+1zBgP5YV7oqs
        6J+xstJ/6urq9lfaPc46e+t7/O9OH/xujM+ReXl/p9d/vtq+AHNNtagnGFDuPv/zZYuLi196ouvYe7f/
        f/pZ7h4YK/hzd0en6Gcv2N7+shrqLvgE9OLhOoAa1y5vC61HAEgWW1XnA+WhUPCP84ltued+2v+7e2sG
        /zWTfMMfrlN4bc0kcGjc6wMkgR8mv7JGEL1s3Ovav6lx3cua6+9cjQRwp71KNL0XwL6jWrYbeOcfNewf
        wUL17f/E7/uvaa0NeXnVNJIYwL5mOIy+b2QC6G5uTHr9Tr75U/4aD+6RVK6t+b5fvx3+XX9kO4ryprbu
        B7AvqJb8hmbSu+XJTe6x3O2/wAffm32Avs8H/q3+z79hXw7aasPD9ynKl4Tasrp68Dvavi9AtCznG88L
        BY3t2FPrWZOFGnsMumolAeaGpV753FACiGmXnY0uAvMZrA4E2CEr+t8dSgAxFd/ICvfCQHveodYRYG6w
        BTJ7TdLFOntuKwYDnwNvU+sIMFf4YfM/B2bPb45lZ529roxOZu6/1DoCzAW2MGYwc15jSW2vXFPrW4dQ
        ArCiIWodAaRY0c5O4f4oq7tUtxo6uwc6uft5te4hgq8Ahfs3tY4AEqpde3n5OxNX5MnLz9sOPXU7RhGc
        BMzd36l1BJg5NpPvn/r/OlHgH/sEvUjdllH4AH9VIIldrdYRYKZ0zt56TltlvvxrwG+r2zOCBRvij9Lf
        zi1QKwkwMwZP/vYKfNqhHOo2nYhOr/zFoP4993S1ngAzwcpwhzbIjDn8/+i8rgocrGcYXSnIj17+Ra0n
        wMwIvg/vPUn2P53Cfe7RwVPeaseCqdt0Iuw4sRpt21TrCTATOvnWM6oa+bXe68u/tU98nc761+z8+6oG
        X9H/ZT+CuDTL+y+17bbK9ozCAjvYRp/UVlcPPkGtK8BMsIM6awT/3VZbT63rpNiwv9aTv3r6l5eq9QWY
        Cfaky8KLfO62rwNqXSdkYTDhV7s68JFp1B8AmEsGFXMDs+GFW1TreTzVzsTcdWzZ8VJv8xeyc8snVX9v
        S5Z77unVIp9qXmP0p77jJv6+uJT3f1zdNoCZYav9ApNhc7UazuoN2gKdLFiZeALJy19Rt283Njqz+Rav
        22Wdovxz3xd/P6iU5N5eVU0qyovtjIZJyqXZF5rlov8z/nqX++u8dXhGw5FqYjd3/2FHsPuff+bv82tW
        4dnOXJhGG0GMf///x5FPRT98Vuu4m8rp2w78QfD/rrptQxYsMH1A/lWo/uKuScvPVIm8V35n6OKD5c/u
        Tf7ffGE8+7i7fDL4w8455Q/MwggwI0Ln+51ZXPhktY678Y7+kSkkgN+ahy3MS8XmD1kx0knbUZ1s5BPB
        XmXZrNaiT3I3tmSv6/xr1/cpbAQt458E94zq7Dar8bbB2KcIjX6q2a7Fg+o22WuN1+PldT/FhsV91Oo3
        2rUtGfh2/kHW/ivTgzbHwilKkbPXQp7dsrh26GvVOu5QOXNLDmwjieWu+2F1m4YrMP+y5eA8WiX2nrug
        3dWde92nvKmztvEUtR1hQoIO0u0/W63jDl7XUxo77eBd9lfn4VPf8JyFGucszrfYa6QtBlPbEyYg+PSZ
        o3PyloqynNxR3S12LNjSeYefqG7HDl6vK9XB26Ic+aWz3beqbQpjktnpvKMTwG3zMA9gOtQZztrQ18sn
        /P/7nsG7rztvHp9Ow1OQ6j1hrShL7q63g1F9u/7Y/uz/7v/mIOiP95X38bkwIs7Mt77ZztwLO6Bzal2D
        icqLjRDUetZhMOkXPJSk+rxn7d5rX4KNZGx05n9/96QB6/v1Yz5BXpEV/TOsepMFry2kqvZ25O70we9q
        r6DcSVavV9gUxqDbXf/GajFNzRn16vOScB+APS1rlCZ7aB6f9Hvh7f6iGk/TGy1Bh65lNRtrFWo95tru
        jk7Rz2qO7BYGq0XHuYd7YQtmgmlgq7qGT5Yxnxbl/bbkdpa6VsN+/wSsWZcwmkM8fIC8KxBAt+zebRnC
        ZuEtqGsG/zWT1GkYTli+tqavfHgeXhvhOKq1882+ox/xl1loWy9LSsOn3UJVqjsvT7HhvNUVqJ+g3Olt
        6zUNapyu9OBKsfmsCa57Rg07XdZUf3sdrNUn3f5K03tBi1iATFzhd5fUGZaOw2AI22yRim/bX7Sp0zSx
        ScmRbSncn0x67U5R/sMIG72mrTbYmYk1+uUDbd0PGmITRtXMeMPgN2m7UIZtNmkY/J9aXd38pjZ1mibB
        mgS5e9Hk166+LDzq6DZ/z2vbHJJXrwM1vsjYYbJt3RMaUDNjhyUv72xZtQV/3X9voNO92TnutJZ1mio+
        Eb9tZELrXfQtTa5va/6rnYLVrsHyVjsBeRqLnganRAX95fK27wtjUs34j3Oqz+jh6eE2dev0tn6kgS73
        2NxBm/rMAv8K8P5R7VpfX3+MWseaLIQ+ZdpOU7WSyeOHyOvhTG0LS9zp9qSw78H+z5d4+d9jO7N8Y9sz
        u8N9/ZMkgA+s9Dae2aYusyK0288StlrHutjoYnQ/ufv4GiDGd8RbQ8G/VxFP2wbsk0Butf2n8S432AQz
        3gEkw0nMK+3ftq3PrPD6XzeqjTaEV+tYl+DRal5iWZuxbwnt97eKMgq9/NP/zHGG+3bK0PLaoW9T6Nom
        vi2/F0jIr1LrWJfw4ap2ulL5o2o9kya039+Wfir0snMD/P0vtk94Xm7f/cphM/u2Es6GmFYdZ14PGJmE
        0GdAL3d723yDWs86hI5XrxJAz/2cWs+ksVN65zEBpIZVHMq65al15j2sHFgMhTbqJADflp9V65k0oRJa
        saygi5Xhpp1LvXxynPkO2/Wn1j1EvVcAqixLCU06+QTx7hieNrFRVS8eFDCdeLeean6mLnUmATlgVYwP
        8K3gMK1wN9g39f30rq3EFvN0ivKdEwf+I8n5leq2jCJ4nmTuHuDhIsbO/cvGWGuv1jd2qmFxXv530+CP
        IAEsBA9dyd171UrCgWqo9hYSwPSxuvyZHa7RQvDP+/vz4Li1QBsi+qS5r+l0y5Pr7gRU6xor1eGjRXlz
        W8Fvh3Co23QirK11KgV1ev3nq3WFIT4BnE8CmB5+2P/rYwT3x23br5dX+P9+tZd37JwC5H/3af/ni+bh
        oJITUeeUZdsncGAKtSOgAUNnIwG0zFJ342l1Cq1UqzLz/kvtC8Hx17BNQDZ5OM+Bb/h2btZLdO48ta6w
        B3aa7qgz59T6xUjwgNXBE/FvYv7KUr3i1Hjy7yS6mPdr7Hvsy8DwdNlHfR1Q6xYbdnLS8Tsn95gMuz7i
        z2ELgwm/MaoD+1GOWmmogS3SsCGdFamwdzbbN6DWKTZCFX4tOTQt8jENqtqEViPSjwit2Gt2bvmk6u+z
        8nGVX9gin+o7f+BT36Of/m9Utw1gZoSG/z4B/KZax91UKxQH+xHaPizUXnM+OE41Y4Dosao3IwNjzpbz
        ZoPlya0G/lCOzONIB2CqhOotLC8f/nq1jrsJbQ6bTNyHlvLy29VtA5g5oXoL81YSq+G5EHu94rw9lvoF
        AK3jE8DnRgWIfSVQ67hDnm89vsX3/futpPu8JTiAmRKsj9/tP1ut4w524lIrCcCOlPfXUrcHQE4VDKOD
        5ZBaxx3suLXJg97dZfUMO2dvPUfdDoC5IQsdW+5HCPMwTK4OWq1xmk81R5CXn7VPeplVlM7d9qBk/KMr
        RwMkjZ2TaGfu1Zgoc2pdg4mqeHgDDwCMojptyRbT1JxRrybMupsvVulrZwbW2w7urlDpCBAFVjrNvwt/
        ZpJZc1tyO0tdq2G/f/LXrAXxEPX7AEZQrZ1v9h39yIEp7JG3MmSdtY2n2FbiqlR3Xp5iE352OGh93dyb
        2tYL5oDfP+3UozGL2n472ERY3apKo8TmDdrXrby2iU62mMlqGrStF8wB6gDeDwnAavv7IPlE0+A3WV09
        +IQ2dbP19/66DzbRyc5/bFMnmCPUAbwfEoB/wl7VRvD7ofmdbetm6wwaPv1f17ZOMEeoAzj2BFDN+Bfl
        vW0kAB9sh9vWz7+739JApzfMewkyaIg6gGNPAP7dfz38ZHfXDxbLbD92ZaX/VP/nS46vEmSFMtpeELSc
        bzxvwkT0haznLjhA0c79jzqAY08Ama2GCwT/XqvkziwufLJPArm9Xy/1yudOSbcrx08A7v0rxeazpqEP
        zCHqAI49AYT2+6sKfljSsTmF+k99O6qsf8YBnvppoQ7g+BPA6P3+quPVrequD+rVaoNOUd50XDK4tyri
        mbtr/O97fOJLGHUAx54AfGB9fh4TAEAt1AEcewIIldCyyT+1jgAnRB3AsScAH+TXjU4A5bsjrvkP+x11
        AMeeAHyAb9X4rHaDbRKK+eQf2KeoAzj+BLD1jGyMGvpqfQGOQR3AsScAIyvcW0gAECXqAN4PCaDTLU+u
        uxNQrSvAMagDeD8kAMMngPNJADBzbr/8pKPI5NJmX/gAfzUJAGaKOoBil7b7w07TzQp3HwkAZoI6gGKX
        afSJfRnoFOWb9/o6MI37QcKoAyh2mWbfWBHNLHebncK9zUpq276Bad4PEkQdQLGLuv8AGqEOoNhF3X8A
        jVAHUOyi7j+ARqgDKHZR9x9AI9QBFLuo+w+gEeoAil3U/QfQCHUAxS7q/gNohDqAYhd1/wE0Qh1AsYu6
        /wAaoQ6g2EXdfwCNUAdQ7KLuP4BGqAModlH3H4CUm876saNNhIIgzVDbL3X7Jw8JQIvafqnbP3lIAFrU
        9kvd/slDAtCitl/q9k8eEoAWtf1St3/ykAC0qO2Xuv2ThwSgRW2/1O2fPCQALWr7pW7/5CEBaFHbL3X7
        Jw8JQIvafqnbP3lIAFrU9kvd/slDAtCitl/q9k8eEoAWtf1St3/ykAC0qO2Xuv2ThwSgRW2/1O2fPCQA
        LWr7pW7/5CEBNENd0CR2Ufdf8pAAmqEOoNhF3X/JQwJohjqAYhd1/yUPCaAZ6gCKXdT9lzwkgGaoAyh2
        Ufdf8pAAmqEOoNhF3X/JQwJohjqAYhd1/yUPCaAZ6gCKXdT9lzwkgGaoAyh2Ufdf8pAAmqEOoNhF3X/J
        QwJohjqAYhd1/yUPCaAZ6gCKXdT9lzwkgGaoAyh2Ufdf8pAAmqEOoNhF3X/JQwJohjqAYhd1/yUPCaAZ
        6gCKXdT9lzwkAC3YH6TggFqwP0jBAbVgf5CCA2rB/iAFB9SC/UEKDqgF+4MUHFAL9gcpOKAW7A9ScEAt
        2B+k4IBasD9IwQG1YH+QggNqwf4gBQfUgv1BCg6oBfuDFBxQC/YHKTigFuwPUnBALdgfpOCAWrA/SMEB
        tWB/kIIDasH+IAUH1IL9QQoOqAX7gxQcUAv2Byk4oBbsD1JwQC3YH6TggFqwP0jBAbVgf5CCA2rB/iAF
        B9SC/UEKDqgF+4MUHFAL9gcpOKAW7A9ScEAt2B+k4IBasD9IwQG1YH+QggNqwf4gBQfUgv1BCg6oBfuD
        FBxQC/YHKTigFuwPUnBALdgfpOCAWrA/SMEBtWB/kIIDasH+IAUH1IL9QQoOqAX7gxQcUAv2Byk4oBbs
        D1JwQC3YH6TggFqwP0jBAbVgf5CCA2rB/iAFB9SC/UEKDqgF+4MUHFAL9gcpOKAW7A9ScEAt2B+k4IBa
        sD9IwQG1YH+QggNqwf4gBQfUgv1BCg6oBfuDFBxQC/YHKTigFuwPUnBALdgfpOCAWrA/SMEBtWB/kIID
        asH+IAUH1IL9QQoOqAX7gxQcUAv2Byk4oBbsD424/fKTjiKTC/aP2/7Jo+7A2AX7x23/5FF3YOyC/eO2
        f/KoOzB2wf5x2z951B0Yu2D/uO2fPOoOjF2wf9z2Tx51B8Yu2D9u+yePugNjF+wft/2TR92BsQv2j9v+
        yaPuwNgF+8dt/+RRd2Dsgv3jtn/yqDswdsH+cds/edQdGLtg/7jtnzzqDoxdsH/c9k8edQfGLtg/bvsn
        j7oDYxfsH7f95Vxw1g8eRRAkTiEBIEjCQgJAkISFBIAgCQsJAEESFhIAgiQsJAAESVhIAAiSsJAAECRh
        IQEgSMJCAkCQhIUEgCAJCwkAQRIWEgCCJCwkAARJWEgACJKwNE4AAAAAAAAAAAAAAAAAAAAAEA3/DzMZ
        hUh8yl8gAAAAAElFTkSuQmCC
</value>
  </data>
</root>